{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoticeMessage = exports.DataRowMessage = exports.CommandCompleteMessage = exports.ReadyForQueryMessage = exports.NotificationResponseMessage = exports.BackendKeyDataMessage = exports.AuthenticationMD5Password = exports.ParameterStatusMessage = exports.ParameterDescriptionMessage = exports.RowDescriptionMessage = exports.Field = exports.CopyResponse = exports.CopyDataMessage = exports.DatabaseError = exports.copyDone = exports.emptyQuery = exports.replicationStart = exports.portalSuspended = exports.noData = exports.closeComplete = exports.bindComplete = exports.parseComplete = void 0;\nexports.parseComplete = {\n  name: 'parseComplete',\n  length: 5\n};\nexports.bindComplete = {\n  name: 'bindComplete',\n  length: 5\n};\nexports.closeComplete = {\n  name: 'closeComplete',\n  length: 5\n};\nexports.noData = {\n  name: 'noData',\n  length: 5\n};\nexports.portalSuspended = {\n  name: 'portalSuspended',\n  length: 5\n};\nexports.replicationStart = {\n  name: 'replicationStart',\n  length: 4\n};\nexports.emptyQuery = {\n  name: 'emptyQuery',\n  length: 4\n};\nexports.copyDone = {\n  name: 'copyDone',\n  length: 4\n};\n\nclass DatabaseError extends Error {\n  constructor(message, length, name) {\n    super(message);\n    this.length = length;\n    this.name = name;\n  }\n\n}\n\nexports.DatabaseError = DatabaseError;\n\nclass CopyDataMessage {\n  constructor(length, chunk) {\n    this.length = length;\n    this.chunk = chunk;\n    this.name = 'copyData';\n  }\n\n}\n\nexports.CopyDataMessage = CopyDataMessage;\n\nclass CopyResponse {\n  constructor(length, name, binary, columnCount) {\n    this.length = length;\n    this.name = name;\n    this.binary = binary;\n    this.columnTypes = new Array(columnCount);\n  }\n\n}\n\nexports.CopyResponse = CopyResponse;\n\nclass Field {\n  constructor(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format) {\n    this.name = name;\n    this.tableID = tableID;\n    this.columnID = columnID;\n    this.dataTypeID = dataTypeID;\n    this.dataTypeSize = dataTypeSize;\n    this.dataTypeModifier = dataTypeModifier;\n    this.format = format;\n  }\n\n}\n\nexports.Field = Field;\n\nclass RowDescriptionMessage {\n  constructor(length, fieldCount) {\n    this.length = length;\n    this.fieldCount = fieldCount;\n    this.name = 'rowDescription';\n    this.fields = new Array(this.fieldCount);\n  }\n\n}\n\nexports.RowDescriptionMessage = RowDescriptionMessage;\n\nclass ParameterDescriptionMessage {\n  constructor(length, parameterCount) {\n    this.length = length;\n    this.parameterCount = parameterCount;\n    this.name = 'parameterDescription';\n    this.dataTypeIDs = new Array(this.parameterCount);\n  }\n\n}\n\nexports.ParameterDescriptionMessage = ParameterDescriptionMessage;\n\nclass ParameterStatusMessage {\n  constructor(length, parameterName, parameterValue) {\n    this.length = length;\n    this.parameterName = parameterName;\n    this.parameterValue = parameterValue;\n    this.name = 'parameterStatus';\n  }\n\n}\n\nexports.ParameterStatusMessage = ParameterStatusMessage;\n\nclass AuthenticationMD5Password {\n  constructor(length, salt) {\n    this.length = length;\n    this.salt = salt;\n    this.name = 'authenticationMD5Password';\n  }\n\n}\n\nexports.AuthenticationMD5Password = AuthenticationMD5Password;\n\nclass BackendKeyDataMessage {\n  constructor(length, processID, secretKey) {\n    this.length = length;\n    this.processID = processID;\n    this.secretKey = secretKey;\n    this.name = 'backendKeyData';\n  }\n\n}\n\nexports.BackendKeyDataMessage = BackendKeyDataMessage;\n\nclass NotificationResponseMessage {\n  constructor(length, processId, channel, payload) {\n    this.length = length;\n    this.processId = processId;\n    this.channel = channel;\n    this.payload = payload;\n    this.name = 'notification';\n  }\n\n}\n\nexports.NotificationResponseMessage = NotificationResponseMessage;\n\nclass ReadyForQueryMessage {\n  constructor(length, status) {\n    this.length = length;\n    this.status = status;\n    this.name = 'readyForQuery';\n  }\n\n}\n\nexports.ReadyForQueryMessage = ReadyForQueryMessage;\n\nclass CommandCompleteMessage {\n  constructor(length, text) {\n    this.length = length;\n    this.text = text;\n    this.name = 'commandComplete';\n  }\n\n}\n\nexports.CommandCompleteMessage = CommandCompleteMessage;\n\nclass DataRowMessage {\n  constructor(length, fields) {\n    this.length = length;\n    this.fields = fields;\n    this.name = 'dataRow';\n    this.fieldCount = fields.length;\n  }\n\n}\n\nexports.DataRowMessage = DataRowMessage;\n\nclass NoticeMessage {\n  constructor(length, message) {\n    this.length = length;\n    this.message = message;\n    this.name = 'notice';\n  }\n\n}\n\nexports.NoticeMessage = NoticeMessage;","map":{"version":3,"mappings":"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","names":["exports","name","length","DatabaseError","Error","constructor","message","CopyDataMessage","chunk","CopyResponse","binary","columnCount","columnTypes","Array","Field","tableID","columnID","dataTypeID","dataTypeSize","dataTypeModifier","format","RowDescriptionMessage","fieldCount","fields","ParameterDescriptionMessage","parameterCount","dataTypeIDs","ParameterStatusMessage","parameterName","parameterValue","AuthenticationMD5Password","salt","BackendKeyDataMessage","processID","secretKey","NotificationResponseMessage","processId","channel","payload","ReadyForQueryMessage","status","CommandCompleteMessage","text","DataRowMessage","NoticeMessage"],"sources":["/home/brian/node_modules/pg-protocol/src/messages.ts"],"sourcesContent":["export type Mode = 'text' | 'binary'\n\nexport type MessageName =\n  | 'parseComplete'\n  | 'bindComplete'\n  | 'closeComplete'\n  | 'noData'\n  | 'portalSuspended'\n  | 'replicationStart'\n  | 'emptyQuery'\n  | 'copyDone'\n  | 'copyData'\n  | 'rowDescription'\n  | 'parameterDescription'\n  | 'parameterStatus'\n  | 'backendKeyData'\n  | 'notification'\n  | 'readyForQuery'\n  | 'commandComplete'\n  | 'dataRow'\n  | 'copyInResponse'\n  | 'copyOutResponse'\n  | 'authenticationOk'\n  | 'authenticationMD5Password'\n  | 'authenticationCleartextPassword'\n  | 'authenticationSASL'\n  | 'authenticationSASLContinue'\n  | 'authenticationSASLFinal'\n  | 'error'\n  | 'notice'\n\nexport interface BackendMessage {\n  name: MessageName\n  length: number\n}\n\nexport const parseComplete: BackendMessage = {\n  name: 'parseComplete',\n  length: 5,\n}\n\nexport const bindComplete: BackendMessage = {\n  name: 'bindComplete',\n  length: 5,\n}\n\nexport const closeComplete: BackendMessage = {\n  name: 'closeComplete',\n  length: 5,\n}\n\nexport const noData: BackendMessage = {\n  name: 'noData',\n  length: 5,\n}\n\nexport const portalSuspended: BackendMessage = {\n  name: 'portalSuspended',\n  length: 5,\n}\n\nexport const replicationStart: BackendMessage = {\n  name: 'replicationStart',\n  length: 4,\n}\n\nexport const emptyQuery: BackendMessage = {\n  name: 'emptyQuery',\n  length: 4,\n}\n\nexport const copyDone: BackendMessage = {\n  name: 'copyDone',\n  length: 4,\n}\n\ninterface NoticeOrError {\n  message: string | undefined\n  severity: string | undefined\n  code: string | undefined\n  detail: string | undefined\n  hint: string | undefined\n  position: string | undefined\n  internalPosition: string | undefined\n  internalQuery: string | undefined\n  where: string | undefined\n  schema: string | undefined\n  table: string | undefined\n  column: string | undefined\n  dataType: string | undefined\n  constraint: string | undefined\n  file: string | undefined\n  line: string | undefined\n  routine: string | undefined\n}\n\nexport class DatabaseError extends Error implements NoticeOrError {\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n  constructor(message: string, public readonly length: number, public readonly name: MessageName) {\n    super(message)\n  }\n}\n\nexport class CopyDataMessage {\n  public readonly name = 'copyData'\n  constructor(public readonly length: number, public readonly chunk: Buffer) {}\n}\n\nexport class CopyResponse {\n  public readonly columnTypes: number[]\n  constructor(\n    public readonly length: number,\n    public readonly name: MessageName,\n    public readonly binary: boolean,\n    columnCount: number\n  ) {\n    this.columnTypes = new Array(columnCount)\n  }\n}\n\nexport class Field {\n  constructor(\n    public readonly name: string,\n    public readonly tableID: number,\n    public readonly columnID: number,\n    public readonly dataTypeID: number,\n    public readonly dataTypeSize: number,\n    public readonly dataTypeModifier: number,\n    public readonly format: Mode\n  ) {}\n}\n\nexport class RowDescriptionMessage {\n  public readonly name: MessageName = 'rowDescription'\n  public readonly fields: Field[]\n  constructor(public readonly length: number, public readonly fieldCount: number) {\n    this.fields = new Array(this.fieldCount)\n  }\n}\n\nexport class ParameterDescriptionMessage {\n  public readonly name: MessageName = 'parameterDescription'\n  public readonly dataTypeIDs: number[]\n  constructor(public readonly length: number, public readonly parameterCount: number) {\n    this.dataTypeIDs = new Array(this.parameterCount)\n  }\n}\n\nexport class ParameterStatusMessage {\n  public readonly name: MessageName = 'parameterStatus'\n  constructor(\n    public readonly length: number,\n    public readonly parameterName: string,\n    public readonly parameterValue: string\n  ) {}\n}\n\nexport class AuthenticationMD5Password implements BackendMessage {\n  public readonly name: MessageName = 'authenticationMD5Password'\n  constructor(public readonly length: number, public readonly salt: Buffer) {}\n}\n\nexport class BackendKeyDataMessage {\n  public readonly name: MessageName = 'backendKeyData'\n  constructor(public readonly length: number, public readonly processID: number, public readonly secretKey: number) {}\n}\n\nexport class NotificationResponseMessage {\n  public readonly name: MessageName = 'notification'\n  constructor(\n    public readonly length: number,\n    public readonly processId: number,\n    public readonly channel: string,\n    public readonly payload: string\n  ) {}\n}\n\nexport class ReadyForQueryMessage {\n  public readonly name: MessageName = 'readyForQuery'\n  constructor(public readonly length: number, public readonly status: string) {}\n}\n\nexport class CommandCompleteMessage {\n  public readonly name: MessageName = 'commandComplete'\n  constructor(public readonly length: number, public readonly text: string) {}\n}\n\nexport class DataRowMessage {\n  public readonly fieldCount: number\n  public readonly name: MessageName = 'dataRow'\n  constructor(public length: number, public fields: any[]) {\n    this.fieldCount = fields.length\n  }\n}\n\nexport class NoticeMessage implements BackendMessage, NoticeOrError {\n  constructor(public readonly length: number, public readonly message: string | undefined) {}\n  public readonly name = 'notice'\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n}\n"]},"metadata":{},"sourceType":"script"}