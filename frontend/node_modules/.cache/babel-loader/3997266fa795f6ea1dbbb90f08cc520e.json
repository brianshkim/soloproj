{"ast":null,"code":"'use strict';\n/*\n * cls-bluebird\n * Function to shim `Promise.using`\n *\n * `Promise.using()` calls `.then()` and `.lastly` internally which leads to\n * unnecessary CLS context binding with a naive patch.\n *\n * This custom patch intercepts calls to `Promise.all()` (v3) or `Promise.settle()` (v2)\n * within `Promise.using()` and patches the resulting promise's `.then`/`.lastly` methods\n * so they do not bind callbacks to CLS context.\n *\n * NB This patch could break if bluebird internals change, but this is covered by the tests.\n */\n// Modules\n\nvar shimmer = require('shimmer'); // Exports\n\n/**\n * Patch `Promise.using` method to run callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @param {boolean} v3 - `true` if bluebird being patched is v3.x\n * @returns {undefined}\n */\n\n\nmodule.exports = function (Promise, ns, v3) {\n  (v3 ? patchV3 : patchV2)(Promise, ns);\n}; // Patch for `Promise.using()` in bluebird v3\n\n\nfunction patchV3(Promise, ns) {\n  var thenOriginal = Promise.prototype.then.__original,\n      lastlyOriginal = Promise.prototype.lastly.__original; // Patch method\n\n  shimmer.wrap(Promise, 'using', function (usingOriginal) {\n    return function () {\n      // Bind `using` callback (last arg)\n      var argIndex = arguments.length - 1,\n          callback = arguments[argIndex];\n      if (typeof callback === 'function') arguments[argIndex] = ns.bind(callback); // Temporarily patch `Promise.all()`\n\n      shimmer.wrap(Promise, 'all', function (allOriginal) {\n        return function (promises) {\n          // Remove temporary patch on `Promise.all()`\n          Promise.all = allOriginal; // Call original `Promise.all()`\n\n          var p = allOriginal.call(this, promises); // Patch `.then()` method on this promise to not bind callbacks\n\n          p.then = function () {\n            var p = thenOriginal.apply(this, arguments); // Patch `.lastly()` method on this promise to not bind callbacks\n\n            p.lastly = lastlyOriginal;\n            return p;\n          };\n\n          return p;\n        };\n      }); // Call original `Promise.using()` method\n\n      return usingOriginal.apply(this, arguments);\n    };\n  });\n} // Patch for `Promise.using()` in bluebird v2\n\n\nfunction patchV2(Promise, ns) {\n  var thenOriginal = Promise.prototype.then.__original; // Patch method\n\n  shimmer.wrap(Promise, 'using', function (usingOriginal) {\n    return function () {\n      // Bind `using` callback (last arg)\n      var argIndex = arguments.length - 1,\n          callback = arguments[argIndex];\n      if (typeof callback === 'function') arguments[argIndex] = ns.bind(callback); // Temporarily patch `Promise.settle()`\n\n      shimmer.wrap(Promise, 'settle', function (settleOriginal) {\n        return function (resources) {\n          // Remove temporary patch on `Promise.settle()`\n          Promise.settle = settleOriginal; // Call original `Promise.settle()`\n\n          var p = settleOriginal.call(this, resources); // Patch `.then()` method on this promise to not bind callbacks\n\n          p.then = function () {\n            var p = thenOriginal.apply(this, arguments); // Patch `.then()` method on this promise to not bind callbacks\n\n            p.then = thenOriginal;\n            return p;\n          };\n\n          return p;\n        };\n      }); // Call original `Promise.using()` method\n\n      return usingOriginal.apply(this, arguments);\n    };\n  });\n}","map":{"version":3,"names":["shimmer","require","module","exports","Promise","ns","v3","patchV3","patchV2","thenOriginal","prototype","then","__original","lastlyOriginal","lastly","wrap","usingOriginal","argIndex","arguments","length","callback","bind","allOriginal","promises","all","p","call","apply","settleOriginal","resources","settle"],"sources":["/home/brian/node_modules/cls-bluebird/lib/shimUsing.js"],"sourcesContent":["'use strict';\n\n/*\n * cls-bluebird\n * Function to shim `Promise.using`\n *\n * `Promise.using()` calls `.then()` and `.lastly` internally which leads to\n * unnecessary CLS context binding with a naive patch.\n *\n * This custom patch intercepts calls to `Promise.all()` (v3) or `Promise.settle()` (v2)\n * within `Promise.using()` and patches the resulting promise's `.then`/`.lastly` methods\n * so they do not bind callbacks to CLS context.\n *\n * NB This patch could break if bluebird internals change, but this is covered by the tests.\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch `Promise.using` method to run callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @param {boolean} v3 - `true` if bluebird being patched is v3.x\n * @returns {undefined}\n */\nmodule.exports = function(Promise, ns, v3) {\n\t(v3 ? patchV3 : patchV2)(Promise, ns);\n};\n\n// Patch for `Promise.using()` in bluebird v3\nfunction patchV3(Promise, ns) {\n\tvar thenOriginal = Promise.prototype.then.__original,\n\t\tlastlyOriginal = Promise.prototype.lastly.__original;\n\n\t// Patch method\n\tshimmer.wrap(Promise, 'using', function(usingOriginal) {\n\t\treturn function() {\n\t\t\t// Bind `using` callback (last arg)\n\t\t\tvar argIndex = arguments.length - 1,\n\t\t\t\tcallback = arguments[argIndex];\n\t\t\tif (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n\n\t\t\t// Temporarily patch `Promise.all()`\n\t\t\tshimmer.wrap(Promise, 'all', function(allOriginal) {\n\t\t\t\treturn function(promises) {\n\t\t\t\t\t// Remove temporary patch on `Promise.all()`\n\t\t\t\t\tPromise.all = allOriginal;\n\n\t\t\t\t\t// Call original `Promise.all()`\n\t\t\t\t\tvar p = allOriginal.call(this, promises);\n\n\t\t\t\t\t// Patch `.then()` method on this promise to not bind callbacks\n\t\t\t\t\tp.then = function() {\n\t\t\t\t\t\tvar p = thenOriginal.apply(this, arguments);\n\n\t\t\t\t\t\t// Patch `.lastly()` method on this promise to not bind callbacks\n\t\t\t\t\t\tp.lastly = lastlyOriginal;\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t};\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Call original `Promise.using()` method\n\t\t\treturn usingOriginal.apply(this, arguments);\n\t\t};\n\t});\n}\n\n// Patch for `Promise.using()` in bluebird v2\nfunction patchV2(Promise, ns) {\n\tvar thenOriginal = Promise.prototype.then.__original;\n\n\t// Patch method\n\tshimmer.wrap(Promise, 'using', function(usingOriginal) {\n\t\treturn function() {\n\t\t\t// Bind `using` callback (last arg)\n\t\t\tvar argIndex = arguments.length - 1,\n\t\t\t\tcallback = arguments[argIndex];\n\t\t\tif (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n\n\t\t\t// Temporarily patch `Promise.settle()`\n\t\t\tshimmer.wrap(Promise, 'settle', function(settleOriginal) {\n\t\t\t\treturn function(resources) {\n\t\t\t\t\t// Remove temporary patch on `Promise.settle()`\n\t\t\t\t\tPromise.settle = settleOriginal;\n\n\t\t\t\t\t// Call original `Promise.settle()`\n\t\t\t\t\tvar p = settleOriginal.call(this, resources);\n\n\t\t\t\t\t// Patch `.then()` method on this promise to not bind callbacks\n\t\t\t\t\tp.then = function() {\n\t\t\t\t\t\tvar p = thenOriginal.apply(this, arguments);\n\n\t\t\t\t\t\t// Patch `.then()` method on this promise to not bind callbacks\n\t\t\t\t\t\tp.then = thenOriginal;\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t};\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Call original `Promise.using()` method\n\t\t\treturn usingOriginal.apply(this, arguments);\n\t\t};\n\t});\n}\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;EAC1C,CAACA,EAAE,GAAGC,OAAH,GAAaC,OAAhB,EAAyBJ,OAAzB,EAAkCC,EAAlC;AACA,CAFD,C,CAIA;;;AACA,SAASE,OAAT,CAAiBH,OAAjB,EAA0BC,EAA1B,EAA8B;EAC7B,IAAII,YAAY,GAAGL,OAAO,CAACM,SAAR,CAAkBC,IAAlB,CAAuBC,UAA1C;EAAA,IACCC,cAAc,GAAGT,OAAO,CAACM,SAAR,CAAkBI,MAAlB,CAAyBF,UAD3C,CAD6B,CAI7B;;EACAZ,OAAO,CAACe,IAAR,CAAaX,OAAb,EAAsB,OAAtB,EAA+B,UAASY,aAAT,EAAwB;IACtD,OAAO,YAAW;MACjB;MACA,IAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAlC;MAAA,IACCC,QAAQ,GAAGF,SAAS,CAACD,QAAD,CADrB;MAEA,IAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoCF,SAAS,CAACD,QAAD,CAAT,GAAsBZ,EAAE,CAACgB,IAAH,CAAQD,QAAR,CAAtB,CAJnB,CAMjB;;MACApB,OAAO,CAACe,IAAR,CAAaX,OAAb,EAAsB,KAAtB,EAA6B,UAASkB,WAAT,EAAsB;QAClD,OAAO,UAASC,QAAT,EAAmB;UACzB;UACAnB,OAAO,CAACoB,GAAR,GAAcF,WAAd,CAFyB,CAIzB;;UACA,IAAIG,CAAC,GAAGH,WAAW,CAACI,IAAZ,CAAiB,IAAjB,EAAuBH,QAAvB,CAAR,CALyB,CAOzB;;UACAE,CAAC,CAACd,IAAF,GAAS,YAAW;YACnB,IAAIc,CAAC,GAAGhB,YAAY,CAACkB,KAAb,CAAmB,IAAnB,EAAyBT,SAAzB,CAAR,CADmB,CAGnB;;YACAO,CAAC,CAACX,MAAF,GAAWD,cAAX;YAEA,OAAOY,CAAP;UACA,CAPD;;UASA,OAAOA,CAAP;QACA,CAlBD;MAmBA,CApBD,EAPiB,CA6BjB;;MACA,OAAOT,aAAa,CAACW,KAAd,CAAoB,IAApB,EAA0BT,SAA1B,CAAP;IACA,CA/BD;EAgCA,CAjCD;AAkCA,C,CAED;;;AACA,SAASV,OAAT,CAAiBJ,OAAjB,EAA0BC,EAA1B,EAA8B;EAC7B,IAAII,YAAY,GAAGL,OAAO,CAACM,SAAR,CAAkBC,IAAlB,CAAuBC,UAA1C,CAD6B,CAG7B;;EACAZ,OAAO,CAACe,IAAR,CAAaX,OAAb,EAAsB,OAAtB,EAA+B,UAASY,aAAT,EAAwB;IACtD,OAAO,YAAW;MACjB;MACA,IAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAlC;MAAA,IACCC,QAAQ,GAAGF,SAAS,CAACD,QAAD,CADrB;MAEA,IAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoCF,SAAS,CAACD,QAAD,CAAT,GAAsBZ,EAAE,CAACgB,IAAH,CAAQD,QAAR,CAAtB,CAJnB,CAMjB;;MACApB,OAAO,CAACe,IAAR,CAAaX,OAAb,EAAsB,QAAtB,EAAgC,UAASwB,cAAT,EAAyB;QACxD,OAAO,UAASC,SAAT,EAAoB;UAC1B;UACAzB,OAAO,CAAC0B,MAAR,GAAiBF,cAAjB,CAF0B,CAI1B;;UACA,IAAIH,CAAC,GAAGG,cAAc,CAACF,IAAf,CAAoB,IAApB,EAA0BG,SAA1B,CAAR,CAL0B,CAO1B;;UACAJ,CAAC,CAACd,IAAF,GAAS,YAAW;YACnB,IAAIc,CAAC,GAAGhB,YAAY,CAACkB,KAAb,CAAmB,IAAnB,EAAyBT,SAAzB,CAAR,CADmB,CAGnB;;YACAO,CAAC,CAACd,IAAF,GAASF,YAAT;YACA,OAAOgB,CAAP;UACA,CAND;;UAQA,OAAOA,CAAP;QACA,CAjBD;MAkBA,CAnBD,EAPiB,CA4BjB;;MACA,OAAOT,aAAa,CAACW,KAAd,CAAoB,IAApB,EAA0BT,SAA1B,CAAP;IACA,CA9BD;EA+BA,CAhCD;AAiCA"},"metadata":{},"sourceType":"script"}