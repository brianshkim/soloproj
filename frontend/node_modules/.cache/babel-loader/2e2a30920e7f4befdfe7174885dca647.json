{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n\nconst AbstractDialect = require('../abstract');\n\nconst ConnectionManager = require('./connection-manager');\n\nconst Query = require('./query');\n\nconst QueryGenerator = require('./query-generator');\n\nconst DataTypes = require('../../data-types').postgres;\n\nclass PostgresDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n  }\n\n}\n\nPostgresDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'DEFAULT VALUES': true,\n  'EXCEPTION': true,\n  'ON DUPLICATE KEY': false,\n  'ORDER NULLS': true,\n  returnValues: {\n    returning: true\n  },\n  bulkDefault: true,\n  schemas: true,\n  lock: true,\n  lockOf: true,\n  lockKey: true,\n  lockOuterJoinFailure: true,\n  skipLocked: true,\n  forShare: 'FOR SHARE',\n  index: {\n    concurrently: true,\n    using: 2,\n    where: true,\n    functionBased: true\n  },\n  inserts: {\n    onConflictDoNothing: ' ON CONFLICT DO NOTHING',\n    updateOnDuplicate: ' ON CONFLICT DO UPDATE SET'\n  },\n  NUMERIC: true,\n  ARRAY: true,\n  RANGE: true,\n  GEOMETRY: true,\n  REGEXP: true,\n  GEOGRAPHY: true,\n  JSON: true,\n  JSONB: true,\n  HSTORE: true,\n  deferrableConstraints: true,\n  searchPath: true\n});\nConnectionManager.prototype.defaultVersion = '9.4.0';\nPostgresDialect.prototype.Query = Query;\nPostgresDialect.prototype.DataTypes = DataTypes;\nPostgresDialect.prototype.name = 'postgres';\nPostgresDialect.prototype.TICK_CHAR = '\"';\nPostgresDialect.prototype.TICK_CHAR_LEFT = PostgresDialect.prototype.TICK_CHAR;\nPostgresDialect.prototype.TICK_CHAR_RIGHT = PostgresDialect.prototype.TICK_CHAR;\nmodule.exports = PostgresDialect;\nmodule.exports.default = PostgresDialect;\nmodule.exports.PostgresDialect = PostgresDialect;","map":{"version":3,"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","postgres","PostgresDialect","constructor","sequelize","connectionManager","_dialect","prototype","supports","merge","cloneDeep","returnValues","returning","bulkDefault","schemas","lock","lockOf","lockKey","lockOuterJoinFailure","skipLocked","forShare","index","concurrently","using","where","functionBased","inserts","onConflictDoNothing","updateOnDuplicate","NUMERIC","ARRAY","RANGE","GEOMETRY","REGEXP","GEOGRAPHY","JSON","JSONB","HSTORE","deferrableConstraints","searchPath","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports","default"],"sources":["/home/brian/node_modules/sequelize/lib/dialects/postgres/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').postgres;\n\nclass PostgresDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n  }\n}\n\nPostgresDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'DEFAULT VALUES': true,\n  'EXCEPTION': true,\n  'ON DUPLICATE KEY': false,\n  'ORDER NULLS': true,\n  returnValues: {\n    returning: true\n  },\n  bulkDefault: true,\n  schemas: true,\n  lock: true,\n  lockOf: true,\n  lockKey: true,\n  lockOuterJoinFailure: true,\n  skipLocked: true,\n  forShare: 'FOR SHARE',\n  index: {\n    concurrently: true,\n    using: 2,\n    where: true,\n    functionBased: true\n  },\n  inserts: {\n    onConflictDoNothing: ' ON CONFLICT DO NOTHING',\n    updateOnDuplicate: ' ON CONFLICT DO UPDATE SET'\n  },\n  NUMERIC: true,\n  ARRAY: true,\n  RANGE: true,\n  GEOMETRY: true,\n  REGEXP: true,\n  GEOGRAPHY: true,\n  JSON: true,\n  JSONB: true,\n  HSTORE: true,\n  deferrableConstraints: true,\n  searchPath: true\n});\n\nConnectionManager.prototype.defaultVersion = '9.4.0';\nPostgresDialect.prototype.Query = Query;\nPostgresDialect.prototype.DataTypes = DataTypes;\nPostgresDialect.prototype.name = 'postgres';\nPostgresDialect.prototype.TICK_CHAR = '\"';\nPostgresDialect.prototype.TICK_CHAR_LEFT = PostgresDialect.prototype.TICK_CHAR;\nPostgresDialect.prototype.TICK_CHAR_RIGHT = PostgresDialect.prototype.TICK_CHAR;\n\nmodule.exports = PostgresDialect;\nmodule.exports.default = PostgresDialect;\nmodule.exports.PostgresDialect = PostgresDialect;\n"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,aAAD,CAA/B;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,sBAAD,CAAjC;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAD,CAAP,CAA4BM,QAA9C;;AAEA,MAAMC,eAAN,SAA8BN,eAA9B,CAA8C;EAC5CO,WAAW,CAACC,SAAD,EAAY;IACrB;IACA,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyB,IAAIR,iBAAJ,CAAsB,IAAtB,EAA4BO,SAA5B,CAAzB;IACA,KAAKL,cAAL,GAAsB,IAAIA,cAAJ,CAAmB;MACvCO,QAAQ,EAAE,IAD6B;MAEvCF;IAFuC,CAAnB,CAAtB;EAID;;AAT2C;;AAY9CF,eAAe,CAACK,SAAhB,CAA0BC,QAA1B,GAAqCd,CAAC,CAACe,KAAF,CAAQf,CAAC,CAACgB,SAAF,CAAYd,eAAe,CAACW,SAAhB,CAA0BC,QAAtC,CAAR,EAAyD;EAC5F,kBAAkB,IAD0E;EAE5F,aAAa,IAF+E;EAG5F,oBAAoB,KAHwE;EAI5F,eAAe,IAJ6E;EAK5FG,YAAY,EAAE;IACZC,SAAS,EAAE;EADC,CAL8E;EAQ5FC,WAAW,EAAE,IAR+E;EAS5FC,OAAO,EAAE,IATmF;EAU5FC,IAAI,EAAE,IAVsF;EAW5FC,MAAM,EAAE,IAXoF;EAY5FC,OAAO,EAAE,IAZmF;EAa5FC,oBAAoB,EAAE,IAbsE;EAc5FC,UAAU,EAAE,IAdgF;EAe5FC,QAAQ,EAAE,WAfkF;EAgB5FC,KAAK,EAAE;IACLC,YAAY,EAAE,IADT;IAELC,KAAK,EAAE,CAFF;IAGLC,KAAK,EAAE,IAHF;IAILC,aAAa,EAAE;EAJV,CAhBqF;EAsB5FC,OAAO,EAAE;IACPC,mBAAmB,EAAE,yBADd;IAEPC,iBAAiB,EAAE;EAFZ,CAtBmF;EA0B5FC,OAAO,EAAE,IA1BmF;EA2B5FC,KAAK,EAAE,IA3BqF;EA4B5FC,KAAK,EAAE,IA5BqF;EA6B5FC,QAAQ,EAAE,IA7BkF;EA8B5FC,MAAM,EAAE,IA9BoF;EA+B5FC,SAAS,EAAE,IA/BiF;EAgC5FC,IAAI,EAAE,IAhCsF;EAiC5FC,KAAK,EAAE,IAjCqF;EAkC5FC,MAAM,EAAE,IAlCoF;EAmC5FC,qBAAqB,EAAE,IAnCqE;EAoC5FC,UAAU,EAAE;AApCgF,CAAzD,CAArC;AAuCA1C,iBAAiB,CAACU,SAAlB,CAA4BiC,cAA5B,GAA6C,OAA7C;AACAtC,eAAe,CAACK,SAAhB,CAA0BT,KAA1B,GAAkCA,KAAlC;AACAI,eAAe,CAACK,SAAhB,CAA0BP,SAA1B,GAAsCA,SAAtC;AACAE,eAAe,CAACK,SAAhB,CAA0BkC,IAA1B,GAAiC,UAAjC;AACAvC,eAAe,CAACK,SAAhB,CAA0BmC,SAA1B,GAAsC,GAAtC;AACAxC,eAAe,CAACK,SAAhB,CAA0BoC,cAA1B,GAA2CzC,eAAe,CAACK,SAAhB,CAA0BmC,SAArE;AACAxC,eAAe,CAACK,SAAhB,CAA0BqC,eAA1B,GAA4C1C,eAAe,CAACK,SAAhB,CAA0BmC,SAAtE;AAEAG,MAAM,CAACC,OAAP,GAAiB5C,eAAjB;AACA2C,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB7C,eAAzB;AACA2C,MAAM,CAACC,OAAP,CAAe5C,eAAf,GAAiCA,eAAjC"},"metadata":{},"sourceType":"script"}