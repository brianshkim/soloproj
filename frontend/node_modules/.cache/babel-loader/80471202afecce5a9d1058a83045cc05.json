{"ast":null,"code":"'use strict';\n/*\n * cls-bluebird\n * Function to shim `Promise.prototype.call`\n */\n// Modules\n\nvar shimmer = require('shimmer'); // Exports\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Patch `call` method to run callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\n\nmodule.exports = function (Promise, ns) {\n  // Patch method\n  shimmer.wrap(Promise.prototype, 'call', function (callOriginal) {\n    return function () {\n      // Temporarily wrap `this._then` to bind the object method to current CLS context\n      // (`this.call()` will call `this._then()` synchronously)\n      var _thenOriginal = this._then,\n          ownProperty = hasOwnProperty.call(this, '_then');\n\n      this._then = function () {\n        // Unwrap `this._then`\n        if (ownProperty) {\n          this._then = _thenOriginal;\n        } else {\n          delete this._then;\n        } // Bind function that will be called to call object method to CLS context\n\n\n        arguments[0] = ns.bind(arguments[0]); // Run original `this._then` method\n\n        return _thenOriginal.apply(this, arguments);\n      }; // Call original `call` method\n\n\n      return callOriginal.apply(this, arguments);\n    };\n  });\n};","map":{"version":3,"names":["shimmer","require","hasOwnProperty","Object","prototype","module","exports","Promise","ns","wrap","callOriginal","_thenOriginal","_then","ownProperty","call","arguments","bind","apply"],"sources":["/home/brian/node_modules/cls-bluebird/lib/shimCall.js"],"sourcesContent":["'use strict';\n\n/*\n * cls-bluebird\n * Function to shim `Promise.prototype.call`\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Patch `call` method to run callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(Promise, ns) {\n\t// Patch method\n\tshimmer.wrap(Promise.prototype, 'call', function(callOriginal) {\n\t\treturn function() {\n\t\t\t// Temporarily wrap `this._then` to bind the object method to current CLS context\n\t\t\t// (`this.call()` will call `this._then()` synchronously)\n\t\t\tvar _thenOriginal = this._then,\n\t\t\t\townProperty = hasOwnProperty.call(this, '_then');\n\n\t\t\tthis._then = function() {\n\t\t\t\t// Unwrap `this._then`\n\t\t\t\tif (ownProperty) {\n\t\t\t\t\tthis._then = _thenOriginal;\n\t\t\t\t} else {\n\t\t\t\t\tdelete this._then;\n\t\t\t\t}\n\n\t\t\t\t// Bind function that will be called to call object method to CLS context\n\t\t\t\targuments[0] = ns.bind(arguments[0]);\n\n\t\t\t\t// Run original `this._then` method\n\t\t\t\treturn _thenOriginal.apply(this, arguments);\n\t\t\t};\n\n\t\t\t// Call original `call` method\n\t\t\treturn callOriginal.apply(this, arguments);\n\t\t};\n\t});\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB,C,CAEA;;;AAEA,IAAIC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,EAAlB,EAAsB;EACtC;EACAR,OAAO,CAACS,IAAR,CAAaF,OAAO,CAACH,SAArB,EAAgC,MAAhC,EAAwC,UAASM,YAAT,EAAuB;IAC9D,OAAO,YAAW;MACjB;MACA;MACA,IAAIC,aAAa,GAAG,KAAKC,KAAzB;MAAA,IACCC,WAAW,GAAGX,cAAc,CAACY,IAAf,CAAoB,IAApB,EAA0B,OAA1B,CADf;;MAGA,KAAKF,KAAL,GAAa,YAAW;QACvB;QACA,IAAIC,WAAJ,EAAiB;UAChB,KAAKD,KAAL,GAAaD,aAAb;QACA,CAFD,MAEO;UACN,OAAO,KAAKC,KAAZ;QACA,CANsB,CAQvB;;;QACAG,SAAS,CAAC,CAAD,CAAT,GAAeP,EAAE,CAACQ,IAAH,CAAQD,SAAS,CAAC,CAAD,CAAjB,CAAf,CATuB,CAWvB;;QACA,OAAOJ,aAAa,CAACM,KAAd,CAAoB,IAApB,EAA0BF,SAA1B,CAAP;MACA,CAbD,CANiB,CAqBjB;;;MACA,OAAOL,YAAY,CAACO,KAAb,CAAmB,IAAnB,EAAyBF,SAAzB,CAAP;IACA,CAvBD;EAwBA,CAzBD;AA0BA,CA5BD"},"metadata":{},"sourceType":"script"}