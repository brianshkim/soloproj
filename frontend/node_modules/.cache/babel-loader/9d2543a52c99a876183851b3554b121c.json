{"ast":null,"code":"'use strict';\n\nconst stores = new Map();\n\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, new Map());\n  }\n\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n\n  };\n};","map":{"version":3,"names":["stores","Map","module","exports","dialect","has","set","clear","get","refresh","dataType","type","types","parse"],"sources":["/home/brian/node_modules/sequelize/lib/dialects/parserStore.js"],"sourcesContent":["'use strict';\n\nconst stores = new Map();\n\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, new Map());\n  }\n\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAO,IAAI;EAC1B,IAAI,CAACJ,MAAM,CAACK,GAAP,CAAWD,OAAX,CAAL,EAA0B;IACxBJ,MAAM,CAACM,GAAP,CAAWF,OAAX,EAAoB,IAAIH,GAAJ,EAApB;EACD;;EAED,OAAO;IACLM,KAAK,GAAG;MACNP,MAAM,CAACQ,GAAP,CAAWJ,OAAX,EAAoBG,KAApB;IACD,CAHI;;IAILE,OAAO,CAACC,QAAD,EAAW;MAChB,KAAK,MAAMC,IAAX,IAAmBD,QAAQ,CAACE,KAAT,CAAeR,OAAf,CAAnB,EAA4C;QAC1CJ,MAAM,CAACQ,GAAP,CAAWJ,OAAX,EAAoBE,GAApB,CAAwBK,IAAxB,EAA8BD,QAAQ,CAACG,KAAvC;MACD;IACF,CARI;;IASLL,GAAG,CAACG,IAAD,EAAO;MACR,OAAOX,MAAM,CAACQ,GAAP,CAAWJ,OAAX,EAAoBI,GAApB,CAAwBG,IAAxB,CAAP;IACD;;EAXI,CAAP;AAaD,CAlBD"},"metadata":{},"sourceType":"script"}