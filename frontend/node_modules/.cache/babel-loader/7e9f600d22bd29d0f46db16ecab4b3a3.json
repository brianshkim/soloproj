{"ast":null,"code":"var _jsxFileName = \"/home/brian/w15/practice-for-week-15-react-redux-authenticate-me-long-practice-main/authenticate-me/frontend/src/components/AddPlaylistModal/PlaylistForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createSong } from \"../../store/songs\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport * as sessionActions from \"../../store/session\";\nimport { ValidationError } from \"../../utils/validationError\";\nimport { createPlaylist } from \"../../store/playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePlaylistForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [errorMessages, setErrorMessages] = useState({});\n  const [name, setName] = useState(\"\");\n\n  const updateName = e => setName(e.target.value);\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n  const sessionUser = useSelector(state => state.session.user);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      name,\n      user_id: sessionUser.id\n    };\n    let playlist;\n    playlist = dispatch(createPlaylist(payload));\n    console.log('COMPONENT TRY BLOCK - AFTER DISPATCH - THIS IS createdPokemon ->', createSong);\n\n    if (playlist) {\n      setErrorMessages({}); // history.push(`/song/${newSong.id}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-form-holder\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessages.overall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-song\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Playlist Name\",\n        required: true,\n        value: name,\n        onChange: updateName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        label: \"name\",\n        message: errorMessages.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add new Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePlaylistForm, \"/FhK5anPnHPtAZ5FoUL6nAVqDgM=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = CreatePlaylistForm;\nexport default CreatePlaylistForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePlaylistForm\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","useHistory","createSong","ErrorMessage","sessionActions","ValidationError","createPlaylist","CreatePlaylistForm","dispatch","history","isLoaded","setIsLoaded","errorMessages","setErrorMessages","name","setName","updateName","e","target","value","restoreUser","then","sessionUser","state","session","user","handleSubmit","preventDefault","payload","user_id","id","playlist","console","log","overall"],"sources":["/home/brian/w15/practice-for-week-15-react-redux-authenticate-me-long-practice-main/authenticate-me/frontend/src/components/AddPlaylistModal/PlaylistForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createSong } from \"../../store/songs\"\nimport ErrorMessage from \"../ErrorMessage\";\nimport * as sessionActions from \"../../store/session\";\nimport { ValidationError } from \"../../utils/validationError\";\nimport { createPlaylist } from \"../../store/playlist\";\n\n\nconst CreatePlaylistForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  const [errorMessages, setErrorMessages] = useState({})\n  const [name, setName] = useState(\"\")\n\n  const updateName = (e) => setName(e.target.value);\n\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      name,\n      user_id: sessionUser.id\n    };\n\n    let playlist;\n\n      playlist = dispatch(createPlaylist(payload));\n      console.log('COMPONENT TRY BLOCK - AFTER DISPATCH - THIS IS createdPokemon ->', createSong)\n\n    if (playlist) {\n      setErrorMessages({});\n     // history.push(`/song/${newSong.id}`);\n    }\n\n  };\n\n  return (\n    <div className=\"new-form-holder\">\n      <ErrorMessage message={errorMessages.overall} />\n      <form className=\"create-song\" onSubmit={handleSubmit}>\n\n        <label>Name: </label>\n        <input\n          type=\"text\"\n          placeholder=\"Playlist Name\"\n          required\n          value={name}\n          onChange={updateName}\n        />\n\n        <ErrorMessage label={\"name\"} message={errorMessages.name} />\n        <button type=\"submit\">Add new Playlist</button>\n      </form>\n\n    </div>\n  )\n}\n\nexport default CreatePlaylistForm\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAC/B,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAMU,OAAO,GAAGR,UAAU,EAA1B;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMkB,UAAU,GAAIC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;EAGAtB,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACJ,cAAc,CAACgB,WAAf,EAAD,CAAR,CAAuCC,IAAvC,CAA4C,MAAMV,WAAW,CAAC,IAAD,CAA7D;EACD,CAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;EAIA,MAAMc,WAAW,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;;EAEA,MAAMC,YAAY,GAAG,MAAOT,CAAP,IAAa;IAChCA,CAAC,CAACU,cAAF;IAEA,MAAMC,OAAO,GAAG;MACdd,IADc;MAEde,OAAO,EAAEP,WAAW,CAACQ;IAFP,CAAhB;IAKA,IAAIC,QAAJ;IAEEA,QAAQ,GAAGvB,QAAQ,CAACF,cAAc,CAACsB,OAAD,CAAf,CAAnB;IACAI,OAAO,CAACC,GAAR,CAAY,kEAAZ,EAAgF/B,UAAhF;;IAEF,IAAI6B,QAAJ,EAAc;MACZlB,gBAAgB,CAAC,EAAD,CAAhB,CADY,CAEb;IACA;EAEF,CAlBD;;EAoBA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE,QAAC,YAAD;MAAc,OAAO,EAAED,aAAa,CAACsB;IAArC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,aAAhB;MAA8B,QAAQ,EAAER,YAAxC;MAAA,wBAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,eAFd;QAGE,QAAQ,MAHV;QAIE,KAAK,EAAEZ,IAJT;QAKE,QAAQ,EAAEE;MALZ;QAAA;QAAA;QAAA;MAAA,QAHF,eAWE,QAAC,YAAD;QAAc,KAAK,EAAE,MAArB;QAA6B,OAAO,EAAEJ,aAAa,CAACE;MAApD;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAzDD;;GAAMP,kB;UACaR,W,EACDE,U,EAaID,W;;;KAfhBO,kB;AA2DN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}