{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n\nconst AbstractDialect = require('../abstract');\n\nconst ConnectionManager = require('./connection-manager');\n\nconst Query = require('./query');\n\nconst QueryGenerator = require('./query-generator');\n\nconst DataTypes = require('../../data-types').mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n  }\n\n}\n\nMariadbDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'VALUES ()': true,\n  'LIMIT ON UPDATE': true,\n  lock: true,\n  forShare: 'LOCK IN SHARE MODE',\n  settingIsolationLevelDuringTransaction: false,\n  schemas: true,\n  inserts: {\n    ignoreDuplicates: ' IGNORE',\n    updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n  },\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  indexViaAlter: true,\n  indexHints: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nConnectionManager.prototype.defaultVersion = '5.5.3';\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = 'mariadb';\nMariadbDialect.prototype.TICK_CHAR = '`';\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\nmodule.exports = MariadbDialect;","map":{"version":3,"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","mariadb","MariadbDialect","constructor","sequelize","connectionManager","_dialect","prototype","supports","merge","cloneDeep","lock","forShare","settingIsolationLevelDuringTransaction","schemas","inserts","ignoreDuplicates","updateOnDuplicate","index","collate","length","parser","type","using","constraints","dropConstraint","check","indexViaAlter","indexHints","NUMERIC","GEOMETRY","JSON","REGEXP","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["/home/brian/node_modules/sequelize/lib/dialects/mariadb/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n  }\n}\n\nMariadbDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports), {\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    schemas: true,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1\n    },\n    constraints: {\n      dropConstraint: false,\n      check: false\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    NUMERIC: true,\n    GEOMETRY: true,\n    JSON: true,\n    REGEXP: true\n  });\n\nConnectionManager.prototype.defaultVersion = '5.5.3';\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = 'mariadb';\nMariadbDialect.prototype.TICK_CHAR = '`';\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\n\nmodule.exports = MariadbDialect;\n"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,aAAD,CAA/B;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,sBAAD,CAAjC;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAD,CAAP,CAA4BM,OAA9C;;AAEA,MAAMC,cAAN,SAA6BN,eAA7B,CAA6C;EAC3CO,WAAW,CAACC,SAAD,EAAY;IACrB;IACA,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyB,IAAIR,iBAAJ,CAAsB,IAAtB,EAA4BO,SAA5B,CAAzB;IACA,KAAKL,cAAL,GAAsB,IAAIA,cAAJ,CAAmB;MACvCO,QAAQ,EAAE,IAD6B;MAEvCF;IAFuC,CAAnB,CAAtB;EAID;;AAT0C;;AAY7CF,cAAc,CAACK,SAAf,CAAyBC,QAAzB,GAAoCd,CAAC,CAACe,KAAF,CAClCf,CAAC,CAACgB,SAAF,CAAYd,eAAe,CAACW,SAAhB,CAA0BC,QAAtC,CADkC,EACe;EAC/C,aAAa,IADkC;EAE/C,mBAAmB,IAF4B;EAG/CG,IAAI,EAAE,IAHyC;EAI/CC,QAAQ,EAAE,oBAJqC;EAK/CC,sCAAsC,EAAE,KALO;EAM/CC,OAAO,EAAE,IANsC;EAO/CC,OAAO,EAAE;IACPC,gBAAgB,EAAE,SADX;IAEPC,iBAAiB,EAAE;EAFZ,CAPsC;EAW/CC,KAAK,EAAE;IACLC,OAAO,EAAE,KADJ;IAELC,MAAM,EAAE,IAFH;IAGLC,MAAM,EAAE,IAHH;IAILC,IAAI,EAAE,IAJD;IAKLC,KAAK,EAAE;EALF,CAXwC;EAkB/CC,WAAW,EAAE;IACXC,cAAc,EAAE,KADL;IAEXC,KAAK,EAAE;EAFI,CAlBkC;EAsB/CC,aAAa,EAAE,IAtBgC;EAuB/CC,UAAU,EAAE,IAvBmC;EAwB/CC,OAAO,EAAE,IAxBsC;EAyB/CC,QAAQ,EAAE,IAzBqC;EA0B/CC,IAAI,EAAE,IA1ByC;EA2B/CC,MAAM,EAAE;AA3BuC,CADf,CAApC;AA+BAnC,iBAAiB,CAACU,SAAlB,CAA4B0B,cAA5B,GAA6C,OAA7C;AACA/B,cAAc,CAACK,SAAf,CAAyBT,KAAzB,GAAiCA,KAAjC;AACAI,cAAc,CAACK,SAAf,CAAyBR,cAAzB,GAA0CA,cAA1C;AACAG,cAAc,CAACK,SAAf,CAAyBP,SAAzB,GAAqCA,SAArC;AACAE,cAAc,CAACK,SAAf,CAAyB2B,IAAzB,GAAgC,SAAhC;AACAhC,cAAc,CAACK,SAAf,CAAyB4B,SAAzB,GAAqC,GAArC;AACAjC,cAAc,CAACK,SAAf,CAAyB6B,cAAzB,GAA0ClC,cAAc,CAACK,SAAf,CAAyB4B,SAAnE;AACAjC,cAAc,CAACK,SAAf,CAAyB8B,eAAzB,GAA2CnC,cAAc,CAACK,SAAf,CAAyB4B,SAApE;AAEAG,MAAM,CAACC,OAAP,GAAiBrC,cAAjB"},"metadata":{},"sourceType":"script"}