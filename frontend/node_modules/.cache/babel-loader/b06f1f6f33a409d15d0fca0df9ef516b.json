{"ast":null,"code":"import { ValidationError } from \"../utils/validationError\";\nimport { csrfFetch } from './csrf';\nconst LOAD = \"song/LOAD\";\nconst ADD = \"song/ADD\";\nconst DELETE = \"song/DELETE\";\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nconst remove = songId => ({\n  type: DELETE,\n  songId\n});\n\nexport const deleteSong = songId => async dispatch => {\n  console.log(songId);\n  const response = await csrfFetch(`api/songs/${songId}`, {\n    method: 'DELETE'\n  });\n\n  if (response.ok) {\n    dispatch(remove(songId));\n    return songId;\n  }\n};\nexport const getSongs = () => async dispatch => {\n  const response = await fetch(`/api/songs`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n    return list;\n  }\n};\nexport const getSongsUser = () => async dispatch => {\n  const response = await fetch(`/api/songs/home`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n    return list;\n  }\n};\nexport const getSearch = payload => async dispatch => {\n  const response = await csrfFetch('api/search', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n\n  if (response.ok) {\n    const list = await response.json();\n    return dispatch(load(list));\n  }\n};\n\nconst addSong = song => {\n  return {\n    type: ADD,\n    song: song\n  };\n};\n\nexport const updateSong = (id, data) => async dispatch => {\n  const response = await csrfFetch(`/api/songs/${id}`, {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const song = await response.json();\n    dispatch(addSong(song));\n  }\n};\nexport const createSong = data => async dispatch => {\n  console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n  const response = await csrfFetch(`/api/songs`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  const song = await response.json();\n  dispatch(addSong(song));\n  return song;\n};\n\nconst sortList = list => {\n  return list.sort((a, b) => {\n    return a - b;\n  }).map(song => song.id);\n};\n\nconst initialState = {\n  list: []\n};\n\nconst songReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD:\n      console.log(action.list);\n      const Songs = {};\n      action.list.forEach(song => {\n        Songs[song.id] = song;\n      });\n      return { ...Songs,\n        ...state,\n        list: sortList(action.list)\n      };\n\n    case ADD:\n      console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n\n      if (!state[action.song.id]) {\n        const newState = { ...state,\n          [action.song.id]: action.song\n        };\n        const songList = newState.list.map(id => newState[id]);\n        songList.push(action.song);\n        newState.list = sortList(songList);\n        return newState;\n      }\n\n      return { ...state,\n        [action.song.id]: { ...state[action.song.id],\n          ...action.song\n        }\n      };\n\n    case DELETE:\n      const newState = { ...state\n      };\n      delete newState[action.songId];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default songReducer;","map":{"version":3,"names":["ValidationError","csrfFetch","LOAD","ADD","DELETE","load","list","type","remove","songId","deleteSong","dispatch","console","log","response","method","ok","getSongs","fetch","json","getSongsUser","getSearch","payload","headers","body","JSON","stringify","addSong","song","updateSong","id","data","createSong","sortList","sort","a","b","map","initialState","songReducer","state","action","Songs","forEach","newState","songList","push"],"sources":["/home/brian/w15/practice-for-week-15-react-redux-authenticate-me-long-practice-main/authenticate-me/frontend/src/store/songs.js"],"sourcesContent":["import { ValidationError } from \"../utils/validationError\"\nimport { csrfFetch } from './csrf';\nconst LOAD = \"song/LOAD\";\nconst ADD = \"song/ADD\";\nconst DELETE= \"song/DELETE\"\n\n\n\nconst load = (list) => ({\n    type: LOAD,\n    list,\n  });\n\nconst remove = (songId) =>({\n  type: DELETE,\n  songId\n})\n\nexport const deleteSong = (songId)=>async dispatch =>{\n  console.log(songId)\n  const response = await csrfFetch(`api/songs/${songId}`,{\n    method: 'DELETE',\n  })\n\n  if(response.ok){\n\n    dispatch(remove(songId))\n    return songId\n  }\n\n}\n\n  export const getSongs = () => async (dispatch) => {\n    const response = await fetch(`/api/songs`);\n\n    if (response.ok) {\n      const list = await response.json();\n      dispatch(load(list));\n      return list;\n    }\n  };\n\n\n  export const getSongsUser = () => async (dispatch) => {\n    const response = await fetch(`/api/songs/home`);\n\n    if (response.ok) {\n      const list = await response.json();\n      dispatch(load(list));\n      return list;\n    }\n  };\n\n\n  export const getSearch = (payload) => async(dispatch) =>{\n    const response = await csrfFetch('api/search',{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n\n\n    if (response.ok) {\n      const list = await response.json();\n     return dispatch(load(list));\n    }\n\n\n  }\n\n\n\n\n  const addSong= (song) => {\n\n    return {\n      type: ADD,\n      song:song,\n    };\n  };\n\n  export const updateSong = (id, data) => async(dispatch)=>{\n    const response=await csrfFetch(`/api/songs/${id}`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if(response.ok){\n      const song=await response.json()\n      dispatch(addSong(song))\n    }\n  }\n\n  export const createSong = (data) => async (dispatch) => {\n    console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n\n      const response = await csrfFetch(`/api/songs`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n\n\n      const song = await response.json();\n\n\n\n    dispatch(addSong(song));\n    return song;\n\n};\n\n\n  const sortList = (list) => {\n    return list\n      .sort((a, b) => {\n        return a - b;\n      })\n      .map((song) => song.id);\n  };\n\n\n  const initialState = {list:[]}\n\n\nconst songReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD:\n          console.log(action.list)\n            const Songs = {};\n            action.list.forEach((song) => {\n              Songs[song.id] = song\n            });\n            return {\n              ...Songs,\n              ...state,\n              list: sortList(action.list),\n            };\n            case ADD:\n                console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n                if (!state[action.song.id]) {\n                  const newState = {\n                    ...state,\n                    [action.song.id]: action.song,\n                  };\n                  const songList = newState.list.map((id) => newState[id]);\n                  songList.push(action.song);\n                  newState.list = sortList(songList);\n                  return newState;\n                }\n                return {\n                  ...state,\n                  [action.song.id]: {\n                    ...state[action.song.id],\n                    ...action.song,\n                  },\n                };\n              case DELETE:\n                const newState = {...state};\n                delete newState[action.songId]\n                return newState;\n\n\n        default:\n            return state;\n    }\n}\n\nexport default songReducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}