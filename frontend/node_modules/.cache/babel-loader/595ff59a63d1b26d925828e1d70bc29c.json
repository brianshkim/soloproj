{"ast":null,"code":"'use strict';\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {Function} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\n\nfunction classToInvokable(Class) {\n  return new Proxy(Class, {\n    apply(Target, thisArg, args) {\n      return new Target(...args);\n    },\n\n    construct(Target, args) {\n      return new Target(...args);\n    },\n\n    get(target, p) {\n      return target[p];\n    }\n\n  });\n}\n\nexports.classToInvokable = classToInvokable;","map":{"version":3,"names":["classToInvokable","Class","Proxy","apply","Target","thisArg","args","construct","get","target","p","exports"],"sources":["/home/brian/node_modules/sequelize/lib/utils/classToInvokable.js"],"sourcesContent":["'use strict';\n\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {Function} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\nfunction classToInvokable(Class) {\n  return new Proxy(Class, {\n    apply(Target, thisArg, args) {\n      return new Target(...args);\n    },\n    construct(Target, args) {\n      return new Target(...args);\n    },\n    get(target, p) {\n      return target[p];\n    }\n  });\n}\nexports.classToInvokable = classToInvokable;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;EAC/B,OAAO,IAAIC,KAAJ,CAAUD,KAAV,EAAiB;IACtBE,KAAK,CAACC,MAAD,EAASC,OAAT,EAAkBC,IAAlB,EAAwB;MAC3B,OAAO,IAAIF,MAAJ,CAAW,GAAGE,IAAd,CAAP;IACD,CAHqB;;IAItBC,SAAS,CAACH,MAAD,EAASE,IAAT,EAAe;MACtB,OAAO,IAAIF,MAAJ,CAAW,GAAGE,IAAd,CAAP;IACD,CANqB;;IAOtBE,GAAG,CAACC,MAAD,EAASC,CAAT,EAAY;MACb,OAAOD,MAAM,CAACC,CAAD,CAAb;IACD;;EATqB,CAAjB,CAAP;AAWD;;AACDC,OAAO,CAACX,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}