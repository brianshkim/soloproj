{"ast":null,"code":"import { ValidationError } from \"../utils/validationError\";\nimport { csrfFetch } from './csrf';\nconst LOAD = \"song/LOAD\";\nconst ADD = \"song/ADD\";\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nexport const getSongs = () => async dispatch => {\n  const response = await fetch(`/api/songs`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n  }\n};\nexport const getSearch = payload => async dispatch => {\n  const response = await csrfFetch('api/search', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n\n  if (response.ok) {\n    const list = await response.json();\n    return dispatch(load(list));\n  }\n};\n\nconst addSong = song => {\n  return {\n    type: ADD,\n    song: song\n  };\n};\n\nexport const createSong = data => async dispatch => {\n  console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n\n  try {\n    const response = await csrfFetch(`/api/songs`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (!response.ok) {\n      let error;\n\n      if (response.status === 422) {\n        error = await response.json();\n        throw new ValidationError(error.errors, response.statusText);\n      } else {\n        let errorJSON;\n        error = await response.text();\n\n        try {\n          // Check if the error is JSON, i.e., from the Pokemon server. If so,\n          // don't throw error yet or it will be caught by the following catch\n          errorJSON = JSON.parse(error);\n        } catch {\n          // Case if server could not be reached\n          throw new Error(error);\n        }\n\n        throw new Error(`${errorJSON.title}: ${errorJSON.message}`);\n      }\n    }\n\n    const song = await response.json();\n    dispatch(addSong(song));\n    return song;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst sortList = list => {\n  return list.sort((a, b) => {\n    return a - b;\n  }).map(song => song.id);\n};\n\nconst initialState = {\n  list: []\n};\n\nconst songReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD:\n      const Songs = {};\n      action.list.forEach(song => {\n        Songs[song.id] = song;\n      });\n      return { ...Songs,\n        ...state,\n        list: sortList(action.list)\n      };\n\n    case ADD:\n      console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n\n      if (!state[action.song.id]) {\n        const newState = { ...state,\n          [action.song.id]: action.song\n        };\n        const songList = newState.list.map(id => newState[id]);\n        songList.push(action.song);\n        newState.list = sortList(songList);\n        return newState;\n      }\n\n      return { ...state,\n        [action.song.id]: { ...state[action.song.id],\n          ...action.song\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ValidationError","csrfFetch","LOAD","ADD","load","list","type","getSongs","dispatch","response","fetch","ok","json","getSearch","payload","method","headers","body","JSON","stringify","addSong","song","createSong","data","console","log","error","status","errors","statusText","errorJSON","text","parse","Error","title","message","sortList","sort","a","b","map","id","initialState","songReducer","state","action","Songs","forEach","newState","songList","push"],"sources":["/home/brian/w15/practice-for-week-15-react-redux-authenticate-me-long-practice-main/authenticate-me/frontend/src/store/songs.js"],"sourcesContent":["import { ValidationError } from \"../utils/validationError\"\nimport { csrfFetch } from './csrf';\nconst LOAD = \"song/LOAD\";\nconst ADD = \"song/ADD\";\n\n\n\nconst load = (list) => ({\n    type: LOAD,\n    list,\n  });\n\n  export const getSongs = () => async (dispatch) => {\n    const response = await fetch(`/api/songs`);\n\n    if (response.ok) {\n      const list = await response.json();\n      dispatch(load(list));\n    }\n  };\n\n  export const getSearch = (payload) => async(dispatch) =>{\n    const response = await csrfFetch('api/search',{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n\n\n    if (response.ok) {\n      const list = await response.json();\n     return dispatch(load(list));\n    }\n\n\n  }\n\n\n  const addSong= (song) => {\n\n    return {\n      type: ADD,\n      song:song,\n    };\n  };\n\n  export const createSong = (data) => async (dispatch) => {\n    console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n    try {\n      const response = await csrfFetch(`/api/songs`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n\n    if (!response.ok) {\n        let error;\n        if (response.status === 422) {\n          error = await response.json();\n          throw new ValidationError(error.errors, response.statusText);\n        } else {\n          let errorJSON;\n          error = await response.text();\n          try {\n            // Check if the error is JSON, i.e., from the Pokemon server. If so,\n            // don't throw error yet or it will be caught by the following catch\n            errorJSON = JSON.parse(error);\n          } catch {\n            // Case if server could not be reached\n            throw new Error(error);\n          }\n          throw new Error(`${errorJSON.title}: ${errorJSON.message}`);\n        }\n      }\n      const song = await response.json();\n\n\n\n    dispatch(addSong(song));\n    return song;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n  const sortList = (list) => {\n    return list\n      .sort((a, b) => {\n        return a - b;\n      })\n      .map((song) => song.id);\n  };\n\n\n  const initialState = {list:[]}\n\n\nconst songReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD:\n            const Songs = {};\n            action.list.forEach((song) => {\n              Songs[song.id] = song\n            });\n            return {\n              ...Songs,\n              ...state,\n              list: sortList(action.list),\n            };\n            case ADD:\n                console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n                if (!state[action.song.id]) {\n                  const newState = {\n                    ...state,\n                    [action.song.id]: action.song,\n                  };\n                  const songList = newState.list.map((id) => newState[id]);\n                  songList.push(action.song);\n                  newState.list = sortList(songList);\n                  return newState;\n                }\n                return {\n                  ...state,\n                  [action.song.id]: {\n                    ...state[action.song.id],\n                    ...action.song,\n                  },\n                };\n\n        default:\n            return state;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}