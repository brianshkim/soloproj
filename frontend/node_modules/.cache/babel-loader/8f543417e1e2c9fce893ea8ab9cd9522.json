{"ast":null,"code":"'use strict';\n/**\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n * The Base Error all Sequelize Errors inherit from.\n */\n\nclass BaseError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n\nmodule.exports = BaseError;","map":{"version":3,"names":["BaseError","Error","constructor","message","name","captureStackTrace","module","exports"],"sources":["/home/brian/node_modules/sequelize/lib/errors/base-error.js"],"sourcesContent":["'use strict';\n\n/**\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n * The Base Error all Sequelize Errors inherit from.\n */\nclass BaseError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nmodule.exports = BaseError;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,SAAN,SAAwBC,KAAxB,CAA8B;EAC5BC,WAAW,CAACC,OAAD,EAAU;IACnB,MAAMA,OAAN;IACA,KAAKC,IAAL,GAAY,oBAAZ;IACAH,KAAK,CAACI,iBAAN,CAAwB,IAAxB,EAA8B,KAAKH,WAAnC;EACD;;AAL2B;;AAQ9BI,MAAM,CAACC,OAAP,GAAiBP,SAAjB"},"metadata":{},"sourceType":"script"}