{"ast":null,"code":"'use strict';\n/*\n * cls-bluebird\n * Function to shim an object method to retain CLS context\n */\n// Modules\n\nvar shimmer = require('shimmer'); // Exports\n\n/**\n * Patch method to run callbacks in current CLS context.\n *\n * @param {Object} obj - Object on which to find method\n * @param {string} methodName - method name\n * @param {Array} args - Array of indexes of arguments which are callbacks\n *   (negative numbers count from end e.g. -1 is last argument, -2 is penultimate)\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\n\n\nmodule.exports = function (obj, methodName, args, ns) {\n  // Skip non-existent methods\n  if (!obj[methodName]) return; // Patch method\n\n  shimmer.wrap(obj, methodName, function (original) {\n    return function () {\n      for (var i = 0; i < args.length; i++) {\n        var argIndex = args[i];\n        if (argIndex < 0) argIndex += arguments.length;\n        var callback = arguments[argIndex];\n        if (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n      }\n\n      return original.apply(this, arguments);\n    };\n  });\n};","map":{"version":3,"names":["shimmer","require","module","exports","obj","methodName","args","ns","wrap","original","i","length","argIndex","arguments","callback","bind","apply"],"sources":["/home/brian/node_modules/cls-bluebird/lib/shimMethod.js"],"sourcesContent":["'use strict';\n\n/*\n * cls-bluebird\n * Function to shim an object method to retain CLS context\n */\n\n// Modules\nvar shimmer = require('shimmer');\n\n// Exports\n\n/**\n * Patch method to run callbacks in current CLS context.\n *\n * @param {Object} obj - Object on which to find method\n * @param {string} methodName - method name\n * @param {Array} args - Array of indexes of arguments which are callbacks\n *   (negative numbers count from end e.g. -1 is last argument, -2 is penultimate)\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\nmodule.exports = function(obj, methodName, args, ns) {\n\t// Skip non-existent methods\n\tif (!obj[methodName]) return;\n\n\t// Patch method\n\tshimmer.wrap(obj, methodName, function(original) {\n\t\treturn function() {\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar argIndex = args[i];\n\t\t\t\tif (argIndex < 0) argIndex += arguments.length;\n\n\t\t\t\tvar callback = arguments[argIndex];\n\t\t\t\tif (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n\t\t\t}\n\n\t\t\treturn original.apply(this, arguments);\n\t\t};\n\t});\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,EAAhC,EAAoC;EACpD;EACA,IAAI,CAACH,GAAG,CAACC,UAAD,CAAR,EAAsB,OAF8B,CAIpD;;EACAL,OAAO,CAACQ,IAAR,CAAaJ,GAAb,EAAkBC,UAAlB,EAA8B,UAASI,QAAT,EAAmB;IAChD,OAAO,YAAW;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;QACrC,IAAIE,QAAQ,GAAGN,IAAI,CAACI,CAAD,CAAnB;QACA,IAAIE,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,IAAIC,SAAS,CAACF,MAAtB;QAElB,IAAIG,QAAQ,GAAGD,SAAS,CAACD,QAAD,CAAxB;QACA,IAAI,OAAOE,QAAP,KAAoB,UAAxB,EAAoCD,SAAS,CAACD,QAAD,CAAT,GAAsBL,EAAE,CAACQ,IAAH,CAAQD,QAAR,CAAtB;MACpC;;MAED,OAAOL,QAAQ,CAACO,KAAT,CAAe,IAAf,EAAqBH,SAArB,CAAP;IACA,CAVD;EAWA,CAZD;AAaA,CAlBD"},"metadata":{},"sourceType":"script"}