{"ast":null,"code":"import { ValidationError } from \"../utils/validationError\";\nimport { csrfFetch } from './csrf';\nconst LOAD = \"song/LOAD\";\nconst ADD = \"song/ADD\";\nconst DELETE = \"song/DELETE\";\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nconst remove = songId => ({\n  type: DELETE,\n  songId\n});\n\nexport const deleteSong = songId => async dispatch => {\n  const response = await fetch(`api/songs/${songId}`, {\n    method: 'DELETE'\n  });\n\n  if (response.ok) {\n    const {\n      id: deletedSongId\n    } = await response.json();\n    dispatch(remove(deletedSongId));\n    return deletedSongId;\n  }\n};\nexport const getSongs = () => async dispatch => {\n  const response = await fetch(`/api/songs`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n    return list;\n  }\n};\nexport const getSearch = payload => async dispatch => {\n  const response = await csrfFetch('api/search', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n\n  if (response.ok) {\n    const list = await response.json();\n    return dispatch(load(list));\n  }\n};\n\nconst addSong = song => {\n  return {\n    type: ADD,\n    song: song\n  };\n};\n\nexport const createSong = data => async dispatch => {\n  console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n  const response = await csrfFetch(`/api/songs`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  const song = await response.json();\n  dispatch(addSong(song));\n  return song;\n};\n\nconst sortList = list => {\n  return list.sort((a, b) => {\n    return a - b;\n  }).map(song => song.id);\n};\n\nconst initialState = {\n  list: []\n};\n\nconst songReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD:\n      const Songs = {};\n      action.list.forEach(song => {\n        Songs[song.id] = song;\n      });\n      return { ...Songs,\n        ...state,\n        list: sortList(action.list)\n      };\n\n    case ADD:\n      console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n\n      if (!state[action.song.id]) {\n        const newState = { ...state,\n          [action.song.id]: action.song\n        };\n        const songList = newState.list.map(id => newState[id]);\n        songList.push(action.song);\n        newState.list = sortList(songList);\n        return newState;\n      }\n\n      return { ...state,\n        [action.song.id]: { ...state[action.song.id],\n          ...action.song\n        }\n      };\n\n    case DELETE:\n      const newState = { ...state\n      };\n      delete newState[action.songId];\n      return new state();\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ValidationError","csrfFetch","LOAD","ADD","DELETE","load","list","type","remove","songId","deleteSong","dispatch","response","fetch","method","ok","id","deletedSongId","json","getSongs","getSearch","payload","headers","body","JSON","stringify","addSong","song","createSong","data","console","log","sortList","sort","a","b","map","initialState","songReducer","state","action","Songs","forEach","newState","songList","push"],"sources":["/home/brian/w15/practice-for-week-15-react-redux-authenticate-me-long-practice-main/authenticate-me/frontend/src/store/songs.js"],"sourcesContent":["import { ValidationError } from \"../utils/validationError\"\nimport { csrfFetch } from './csrf';\nconst LOAD = \"song/LOAD\";\nconst ADD = \"song/ADD\";\nconst DELETE= \"song/DELETE\"\n\n\n\nconst load = (list) => ({\n    type: LOAD,\n    list,\n  });\n\nconst remove = (songId) =>({\n  type: DELETE,\n  songId\n})\n\nexport const deleteSong = (songId)=>async dispatch =>{\n  const response = await fetch(`api/songs/${songId}`,{\n    method: 'DELETE',\n  })\n\n  if(response.ok){\n    const {id: deletedSongId} = await response.json()\n    dispatch(remove(deletedSongId))\n    return deletedSongId\n  }\n\n}\n\n  export const getSongs = () => async (dispatch) => {\n    const response = await fetch(`/api/songs`);\n\n    if (response.ok) {\n      const list = await response.json();\n      dispatch(load(list));\n      return list;\n    }\n  };\n\n  export const getSearch = (payload) => async(dispatch) =>{\n    const response = await csrfFetch('api/search',{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n\n\n    if (response.ok) {\n      const list = await response.json();\n     return dispatch(load(list));\n    }\n\n\n  }\n\n\n  const addSong= (song) => {\n\n    return {\n      type: ADD,\n      song:song,\n    };\n  };\n\n  export const createSong = (data) => async (dispatch) => {\n    console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n\n      const response = await csrfFetch(`/api/songs`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n\n\n      const song = await response.json();\n\n\n\n    dispatch(addSong(song));\n    return song;\n\n};\n\n\n  const sortList = (list) => {\n    return list\n      .sort((a, b) => {\n        return a - b;\n      })\n      .map((song) => song.id);\n  };\n\n\n  const initialState = {list:[]}\n\n\nconst songReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD:\n            const Songs = {};\n            action.list.forEach((song) => {\n              Songs[song.id] = song\n            });\n            return {\n              ...Songs,\n              ...state,\n              list: sortList(action.list),\n            };\n            case ADD:\n                console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n                if (!state[action.song.id]) {\n                  const newState = {\n                    ...state,\n                    [action.song.id]: action.song,\n                  };\n                  const songList = newState.list.map((id) => newState[id]);\n                  songList.push(action.song);\n                  newState.list = sortList(songList);\n                  return newState;\n                }\n                return {\n                  ...state,\n                  [action.song.id]: {\n                    ...state[action.song.id],\n                    ...action.song,\n                  },\n                };\n              case DELETE:\n                const newState = {...state};\n                delete newState[action.songId]\n                return new state;\n\n\n        default:\n            return state;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}