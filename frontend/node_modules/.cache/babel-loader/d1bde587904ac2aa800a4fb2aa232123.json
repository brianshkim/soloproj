{"ast":null,"code":"import { ValidationError } from \"../utils/validationError\";\nimport { csrfFetch } from './csrf';\nconst LOAD = \"playlist/LOAD\";\nconst ADD = \"playlist/ADD\";\nconst ADD_SONG = \"playlist/ADDSONG\";\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nconst addPlaylist = playlist => {\n  return {\n    type: ADD,\n    playlist: playlist\n  };\n};\n\nexport const createPlaylist = data => async dispatch => {\n  console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n\n  try {\n    const response = await csrfFetch(`/api/playlists`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (!response.ok) {\n      let error;\n\n      if (response.status === 422) {\n        error = await response.json();\n        throw new ValidationError(error.errors, response.statusText);\n      } else {\n        let errorJSON;\n        error = await response.text();\n\n        try {\n          // Check if the error is JSON, i.e., from the Pokemon server. If so,\n          // don't throw error yet or it will be caught by the following catch\n          errorJSON = JSON.parse(error);\n        } catch {\n          // Case if server could not be reached\n          throw new Error(error);\n        }\n\n        throw new Error(`${errorJSON.title}: ${errorJSON.message}`);\n      }\n    }\n\n    const playlist = await response.json();\n    dispatch(addPlaylist(playlist));\n    return playlist;\n  } catch (error) {\n    throw error;\n  }\n};\nconst initialState = {\n  list: []\n};\n\nconst PlaylistReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD:\n      const Playlists = {};\n      action.list.forEach(playlist => {\n        Playlists[playlist.id] = playlist;\n      });\n      return { ...Playlists,\n        ...state,\n        list: sortList(action.list)\n      };\n\n    case ADD:\n      console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n\n      if (!state[action.playlist.id]) {\n        const newState = { ...state,\n          [action.playlist.id]: playlist\n        };\n        const playlistList = newState.list.map(id => newState[id]);\n        songList.push(action.playlist);\n        newState.list = sortList(playlistList);\n        return newState;\n      }\n\n      return { ...state,\n        [action.playlist.id]: { ...state[action.playlist.id],\n          ...action.playlist\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = PlaylistReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistReducer\");","map":{"version":3,"names":["ValidationError","csrfFetch","LOAD","ADD","ADD_SONG","load","list","type","addPlaylist","playlist","createPlaylist","data","dispatch","console","log","response","method","headers","body","JSON","stringify","ok","error","status","json","errors","statusText","errorJSON","text","parse","Error","title","message","initialState","PlaylistReducer","state","action","Playlists","forEach","id","sortList","newState","playlistList","map","songList","push"],"sources":["/home/brian/w15/practice-for-week-15-react-redux-authenticate-me-long-practice-main/authenticate-me/frontend/src/store/playlist.js"],"sourcesContent":["import { ValidationError } from \"../utils/validationError\"\nimport { csrfFetch } from './csrf';\nconst LOAD = \"playlist/LOAD\";\nconst ADD = \"playlist/ADD\";\nconst ADD_SONG = \"playlist/ADDSONG\"\n\n\n\nconst load = (list) => ({\n    type: LOAD,\n    list,\n  });\n\n\n  const addPlaylist= (playlist) => {\n\n    return {\n      type: ADD,\n      playlist:playlist,\n    };\n  };\n\n\n  export const createPlaylist = (data) => async (dispatch) => {\n    console.log(\"TOP OF THUNK IN STORE - data -> \", data);\n    try {\n      const response = await csrfFetch(`/api/playlists`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n\n    if (!response.ok) {\n        let error;\n        if (response.status === 422) {\n          error = await response.json();\n          throw new ValidationError(error.errors, response.statusText);\n        } else {\n          let errorJSON;\n          error = await response.text();\n          try {\n            // Check if the error is JSON, i.e., from the Pokemon server. If so,\n            // don't throw error yet or it will be caught by the following catch\n            errorJSON = JSON.parse(error);\n          } catch {\n            // Case if server could not be reached\n            throw new Error(error);\n          }\n          throw new Error(`${errorJSON.title}: ${errorJSON.message}`);\n        }\n      }\n      const playlist = await response.json();\n      dispatch(addPlaylist(playlist));\n      return playlist;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const initialState = {list:[]}\n\n\n  const PlaylistReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD:\n            const Playlists = {};\n            action.list.forEach((playlist) => {\n              Playlists[playlist.id] = playlist\n            });\n            return {\n              ...Playlists,\n              ...state,\n              list: sortList(action.list),\n            };\n            case ADD:\n                console.log('IN REDUCER ADD ONE CASE - ACTION -> ', action);\n                if (!state[action.playlist.id]) {\n                  const newState = {\n                    ...state,\n                    [action.playlist.id]: playlist,\n                  };\n                  const playlistList = newState.list.map((id) => newState[id]);\n                  songList.push(action.playlist);\n                  newState.list = sortList(playlistList);\n                  return newState;\n                }\n                return {\n                  ...state,\n                  [action.playlist.id]: {\n                    ...state[action.playlist.id],\n                    ...action.playlist,\n                  },\n                };\n\n        default:\n            return state;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}